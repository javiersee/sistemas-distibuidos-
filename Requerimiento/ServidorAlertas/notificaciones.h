/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _NOTIFICACIONES_H_RPCGEN
#define _NOTIFICACIONES_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXNOM 40

struct ultimaAlerta {
	char hora[15];
	char fecha[15];
	int puntuacion;
};
typedef struct ultimaAlerta ultimaAlerta;

struct presionArterial2 {
	int sistolica;
	int diastolica;
};
typedef struct presionArterial2 presionArterial2;

struct nodo_indicadores2 {
	int frecuenciaCardiaca;
	presionArterial2 sPresionArterial;
	int frecuenciaRespiratoria;
	float temperatura;
	int saturacionOxigeno;
};
typedef struct nodo_indicadores2 nodo_indicadores2;

struct nodo_paciente2 {
	char nombres[MAXNOM];
	float edad;
	int numHabitacion;
	nodo_indicadores2 indicadores;
};
typedef struct nodo_paciente2 nodo_paciente2;

struct indicador_genero_alerta {
	char nombreIndicador[MAXNOM];
	char valor[MAXNOM];
};
typedef struct indicador_genero_alerta indicador_genero_alerta;

struct alerta {
	nodo_paciente2 paciente;
	char hora[15];
	char fecha[15];
	indicador_genero_alerta generoAlerta[5];
	char mensajeNotificaciones[200];
	ultimaAlerta ultimasAlertas[5];
};
typedef struct alerta alerta;

#define gestion_notificaciones 0x0000002
#define gestion_notificaciones_version 2

#if defined(__STDC__) || defined(__cplusplus)
#define enviarNotificaciones_2 1
extern  bool_t * enviarnotificaciones_2_2(alerta *, CLIENT *);
extern  bool_t * enviarnotificaciones_2_2_svc(alerta *, struct svc_req *);
extern int gestion_notificaciones_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define enviarNotificaciones_2 1
extern  bool_t * enviarnotificaciones_2_2();
extern  bool_t * enviarnotificaciones_2_2_svc();
extern int gestion_notificaciones_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_ultimaAlerta (XDR *, ultimaAlerta*);
extern  bool_t xdr_presionArterial2 (XDR *, presionArterial2*);
extern  bool_t xdr_nodo_indicadores2 (XDR *, nodo_indicadores2*);
extern  bool_t xdr_nodo_paciente2 (XDR *, nodo_paciente2*);
extern  bool_t xdr_indicador_genero_alerta (XDR *, indicador_genero_alerta*);
extern  bool_t xdr_alerta (XDR *, alerta*);

#else /* K&R C */
extern bool_t xdr_ultimaAlerta ();
extern bool_t xdr_presionArterial2 ();
extern bool_t xdr_nodo_indicadores2 ();
extern bool_t xdr_nodo_paciente2 ();
extern bool_t xdr_indicador_genero_alerta ();
extern bool_t xdr_alerta ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_NOTIFICACIONES_H_RPCGEN */
